iptables基本管理

关闭firewalld，启动iptables服务

1）关闭firewalld服务器
 systemctl stop firewalld.service 
 systemctl disable firewalld.service
2）安装iptables-services并启动服务
 yum -y install iptables-services
 systemctl start iptables.service
熟悉iptables框架

1）iptables的4个表（区分大小写）：

iptables默认有4个表，nat表（地址转换表）、filter表（数据过滤表）、raw表（状态跟踪表）、mangle表（包标记表）。

2）iptables的5个链（区分大小写）：

INPUT链（入站规则）

OUTPUT链（出站规则）

FORWARD链（转发规则）

PREROUTING链（路由前规则）

POSTROUTING链（路由后规则）

步骤三：iptables命令的基本使用方法

1）iptabels语法格式

[root@proxy ~]# iptables  [-t 表名]  选项  [链名]  [条件]  [-j 目标操作]
[root@proxy ~]# iptables  -t  filter  -I  INPUT -p  icmp  -j  REJECT

[root@proxy ~]# iptables -t filter -I  INPUT   -p  icmp  -j  ACCEPT
[root@proxy ~]# iptables  -I  INPUT  -p  icmp  -j  REJECT
//注意事项与规律：
//可以不指定表，默认为filter表
//可以不指定链，默认为对应表的所有链
//如果没有找到匹配条件，则执行防火墙默认规则
//选项/链名/目标操作用大写字母，其余都小写
########################################################################
//目标操作：
// ACCEPT：允许通过/放行
// DROP：直接丢弃，不给出任何回应
// REJECT：拒绝通过，必要时会给出提示
// LOG：记录日志，然后传给下一条规则

2）iptables命令的使用案例

创建规则的案例：

 iptables  -t  filter  -A  INPUT  -p tcp  -j  ACCEPT
//追加规则至filter表中的INPUT链的末尾，允许任何人使用TCP协议访问本机
 iptables  -I  INPUT  -p  udp  -j  ACCEPT
//插入规则至filter表中的INPUT链的开头，允许任何人使用UDP协议访问本机
 iptables  -I  INPUT 2  -p  icmp  -j  ACCEPT
//插入规则至filter表中的INPUT链的第2行，允许任何人使用ICMP协议访问本机

查看iptables防火墙规则
 iptables  -L  INPUT  --line-numbers		//查看规则，显示行号
删除规则，清空所有规则

 iptables  -D  INPUT  3         //删除filter表中INPUT链的第3条规则
 iptables  -nL  INPUT		//查看规则，确认是否删除
 iptables  -F               //清空filter表中所有链的防火墙规则
 iptables  -t  nat  -F          //清空nat表中所有链的防火墙规则
 iptables  -t  mangle  -F        //清空mangle表中所有链的防火墙规则
 iptables  -t  raw  -F           //清空raw表中所有链的防火墙规则
设置防火墙默认规则
 iptables  -t  filter  -P  INPUT  DROP
 iptables  -nL


2. 根据MAC地址过滤,防止对方修改IP后，防火墙会失效
 ip link show eth0			//查看client的MAC地址
 iptables  -A  INPUT  -p tcp --dport 22 -m   mac --mac-source  \       52:54:00:00:00:0b  -j  DROP       //拒绝52:54:00:00:00:0b这台主机远程本机

基于多端口设置过滤规则

1）一次需要过滤或放行很多端口时会比较方便

  iptables  -A  INPUT  -p tcp   \
> -m  multiport --dports  20:22,25,80,110,143,16501:16800  -j  ACCEPT
 #一次性开启20,21,22,25,80,110,143,16501到16800所有的端口
 提示，多端口还可以限制多个源端口，但因为源端口不固定，一般不会使用，限制 多个源端口的参数是--sports.

根据IP地址范围设置规则

1）允许从 192.168.4.10-192.168.4.20 登录

 iptables  -A  INPUT  -p tcp  --dport  22  \
> -m  iprange  --src-range  192.168.4.10-192.168.4.20   -j  ACCEPT
注意，这里也可以限制多个目标IP的范围，参数是--dst-range,用法与--src-range一致。

2）禁止从 192.168.4.0/24 网段其他的主机登录
 iptables -A INPUT -p tcp --dport 22  -s 192.168.4.0/24  -j  DROP

配置SNAT实现共享上网

设置防火墙规则，实现IP地址的伪装（SNAT源地址转换）

1）确保proxy主机开启了路由转发功能

[root@proxy ~]# echo 1 > /proc/sys/net/ipv4/ip_forward			//开启路由转发
2）设置防火墙规则，实现SNAT地址转换

[root@proxy ~]# iptables  -t  nat  -A POSTROUTING \
> -s  192.168.4.0/24 -p tcp --dport 80  -j SNAT  --to-source 192.168.2.5
3）登陆web主机查看日志

[root@proxy ~]# tail  /var/log/httpd/access_log
.. ..
192.168.2.5 - - [12/Aug/2018:17:57:10 +0800] "GET / HTTP/1.1" 200 27 "-" "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)"
通过日志会发现，客户端是先伪装为了192.168.2.5之后再访问的web服务器！

4）扩展知识，对于proxy外网IP不固定的情况可以执行下面的地址伪装，动态伪装IP。

[root@proxy ~]# iptables  -t  nat  -A POSTROUTING \
> -s  192.168.4.0/24 -p tcp --dport 80 -j MASQUERADE
最后，所有iptables规则都是临时规则，如果需要永久保留规则需要执行如下命令:

[root@proxy ~]# service  iptables save




















































